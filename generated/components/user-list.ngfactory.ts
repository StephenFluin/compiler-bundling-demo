/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from './user-list';
import * as import3 from '@angular/core/src/linker/element';
import * as import4 from '@angular/common/src/directives/ng_for';
import * as import5 from '@angular/core/src/linker/view_utils';
import * as import6 from '@angular/core/src/di/injector';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/change_detection';
import * as import9 from '@angular/core/src/linker/template_ref';
import * as import10 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import11 from '@angular/core/src/metadata/view';
import * as import12 from '@angular/core/src/linker/component_factory';
const styles_UserList:any[] = [];
var renderType_UserList:import0.RenderComponentType = null;
class _View_UserList0 extends import1.AppView<import2.UserList> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _anchor_3:any;
  private _appEl_3:import3.AppElement;
  _TemplateRef_3_5:any;
  _NgFor_3_6:import4.NgFor;
  _text_4:any;
  _text_5:any;
  private _expr_0:any;
  constructor(viewUtils:import5.ViewUtils,parentInjector:import6.Injector,declarationEl:import3.AppElement) {
    super(_View_UserList0,renderType_UserList,import7.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import8.ChangeDetectionStrategy.CheckAlways);
  }
  createInternal(rootSelector:string):import3.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n	  ',null);
    this._el_1 = this.renderer.createElement(parentRenderNode,'ul',null);
    this._text_2 = this.renderer.createText(this._el_1,'\n	    ',null);
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1,null);
    this._appEl_3 = new import3.AppElement(3,1,this,this._anchor_3);
    this._TemplateRef_3_5 = new import9.TemplateRef_(this._appEl_3,viewFactory_UserList1);
    this._NgFor_3_6 = new import4.NgFor(this._appEl_3.vcRef,this._TemplateRef_3_5,this.parentInjector.get(import10.IterableDiffers),this.ref);
    this._text_4 = this.renderer.createText(this._el_1,'\n	  ',null);
    this._text_5 = this.renderer.createText(parentRenderNode,'\n 	',null);
    this._expr_0 = import8.uninitialized;
    this.init([],[
      this._text_0,
      this._el_1,
      this._text_2,
      this._anchor_3,
      this._text_4,
      this._text_5
    ]
    ,[],[]);
    return null;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import9.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import4.NgFor) && (3 === requestNodeIndex))) { return this._NgFor_3_6; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0:any = this.context.users;
    if (import5.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this._NgFor_3_6.ngForOf = currVal_0;
      this._expr_0 = currVal_0;
    }
    if (!throwOnChange) { this._NgFor_3_6.ngDoCheck(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
export function viewFactory_UserList0(viewUtils:import5.ViewUtils,parentInjector:import6.Injector,declarationEl:import3.AppElement):import1.AppView<import2.UserList> {
  if ((renderType_UserList === null)) { (renderType_UserList = viewUtils.createRenderComponentType('/Users/robwormald/Dev/demos/compiler-bundling-demo/src/components/user-list.ts class UserList - inline template',0,import11.ViewEncapsulation.None,styles_UserList)); }
  return new _View_UserList0(viewUtils,parentInjector,declarationEl);
}
class _View_UserList1 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  private _expr_0:any;
  constructor(viewUtils:import5.ViewUtils,parentInjector:import6.Injector,declarationEl:import3.AppElement) {
    super(_View_UserList1,renderType_UserList,import7.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import8.ChangeDetectionStrategy.CheckAlways);
  }
  createInternal(rootSelector:string):import3.AppElement {
    this._el_0 = this.renderer.createElement(null,'li',null);
    this._text_1 = this.renderer.createText(this._el_0,'',null);
    this._expr_0 = import8.uninitialized;
    this.init([].concat([this._el_0]),[
      this._el_0,
      this._text_1
    ]
    ,[],[]);
    return null;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = import5.interpolate(1,'',this.context.$implicit.name,'');
    if (import5.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setText(this._text_1,currVal_0);
      this._expr_0 = currVal_0;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_UserList1(viewUtils:import5.ViewUtils,parentInjector:import6.Injector,declarationEl:import3.AppElement):import1.AppView<any> {
  return new _View_UserList1(viewUtils,parentInjector,declarationEl);
}
const styles_UserList_Host:any[] = [];
var renderType_UserList_Host:import0.RenderComponentType = null;
class _View_UserList_Host0 extends import1.AppView<any> {
  _el_0:any;
  private _appEl_0:import3.AppElement;
  _UserList_0_4:import2.UserList;
  constructor(viewUtils:import5.ViewUtils,parentInjector:import6.Injector,declarationEl:import3.AppElement) {
    super(_View_UserList_Host0,renderType_UserList_Host,import7.ViewType.HOST,viewUtils,parentInjector,declarationEl,import8.ChangeDetectionStrategy.CheckAlways);
  }
  createInternal(rootSelector:string):import3.AppElement {
    this._el_0 = this.selectOrCreateHostElement('user-list',rootSelector,null);
    this._appEl_0 = new import3.AppElement(0,null,this,this._el_0);
    var compView_0:any = viewFactory_UserList0(this.viewUtils,this.injector(0),this._appEl_0);
    this._UserList_0_4 = new import2.UserList();
    this._appEl_0.initComponent(this._UserList_0_4,[],compView_0);
    compView_0.create(this._UserList_0_4,this.projectableNodes,null);
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import2.UserList) && (0 === requestNodeIndex))) { return this._UserList_0_4; }
    return notFoundResult;
  }
}
function viewFactory_UserList_Host0(viewUtils:import5.ViewUtils,parentInjector:import6.Injector,declarationEl:import3.AppElement):import1.AppView<any> {
  if ((renderType_UserList_Host === null)) { (renderType_UserList_Host = viewUtils.createRenderComponentType('',0,null,styles_UserList_Host)); }
  return new _View_UserList_Host0(viewUtils,parentInjector,declarationEl);
}
export const UserListNgFactory:import12.ComponentFactory<import2.UserList> = new import12.ComponentFactory<import2.UserList>('user-list',viewFactory_UserList_Host0,import2.UserList);